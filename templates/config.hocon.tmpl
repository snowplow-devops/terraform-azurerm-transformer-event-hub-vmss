{
  "input": {
    "type": "kafka"
    "topicName": "${enriched_topic_name}"
    "bootstrapServers": "${eh_namespace_broker}" 
    "consumerConf": {
      "security.protocol": "SASL_SSL",
      "sasl.mechanism": "PLAIN",
      "sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"$ConnectionString\" password=\"${enriched_topic_connection_string}\";"
      "group.id": "${enriched_group_id}"
    }
  }

  # Path to transformed archive
  "output": {
    "path": "https://${storage_account_name}.blob.core.windows.net/${storage_container_name}/"
    # Transformer output compression, GZIP or NONE
    # Optional, default value GZIP
    "compression": "${compression}"
  }

  # Frequency to emit transforming finished message - 5,10,15,20,30,60 etc minutes
  # Optional, default value 10 minutes
  "windowing": "${window_period}"

  # Queue used to communicate with Loader
  "queue": {
    "type": "kafka"
    "topicName": "${queue_topic_name}"
    "bootstrapServers": "${eh_namespace_broker}"
    "producerConf": {
      "security.protocol": "SASL_SSL",
      "sasl.mechanism": "PLAIN",
      "sasl.jaas.config": "org.apache.kafka.common.security.plain.PlainLoginModule required username=\"$ConnectionString\" password=\"${queue_topic_connection_string}\";"
    }
  }

  # Schema-specific format settings (recommended to leave all three groups empty and use TSV as default)
  "formats": {
    "transformationType": "widerow"
    # Optional. Denotes output file format when transformationType is 'widerow'.
    # Possible values are 'json' and 'parquet'. Default value 'json'.
    "fileFormat": "${widerow_file_format}"
  }

  "telemetry": {
    "disable": ${telemetry_disable}
    "interval": 15 minutes
    "method": "POST"
    "collectorUri": "${telemetry_collector_uri}"
    "collectorPort": ${telemetry_collector_port}
    "secure": ${telemetry_secure}
    "userProvidedId": "${telemetry_user_provided_id}"
    "autoGeneratedId": "${telemetry_auto_gen_id}"
    "moduleName": "${telemetry_module_name}"
    "moduleVersion": "${telemetry_module_version}"
    "instanceId": $${INSTANCE_ID}
  }
}
